// <auto-generated />
using System;
using Dustin.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dustin.Infrastructure.Migrations
{
    [DbContext(typeof(DustinDbContext))]
    [Migration("20250420133404_more_seed_data")]
    partial class more_seed_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dustin.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f35a338c-b670-4db7-8200-341f54fd5e08"),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("f80cc0f3-312c-4492-ba91-fe81b5d3d9f1"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("144118e0-8c56-4d95-8675-5152accf7478"),
                            Name = "Computer & Tablets"
                        },
                        new
                        {
                            Id = new Guid("8267f7b5-b8c2-45fc-9a7a-172bd7bcb956"),
                            Name = "Mobile phones & Accessories"
                        },
                        new
                        {
                            Id = new Guid("09e90f89-ffc7-48fe-942d-86b175057c76"),
                            Name = "Audio & video"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b97e3e3-cbf9-4369-ba6d-f2e1e41a5a62"),
                            Name = "Color"
                        },
                        new
                        {
                            Id = new Guid("8cce2447-a3c9-4d08-8289-808a534c4351"),
                            Name = "Storage"
                        },
                        new
                        {
                            Id = new Guid("db51329a-17f1-4185-88a6-fde355db5576"),
                            Name = "Screen size"
                        },
                        new
                        {
                            Id = new Guid("7ca729e8-c814-429e-97e5-78b6805ddf65"),
                            Name = "Display technology"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d469824-3583-4c0c-9d88-df0cbd45b1ea"),
                            BrandId = new Guid("f35a338c-b670-4db7-8200-341f54fd5e08"),
                            Description = "Apple's premium laptop",
                            Name = "MacBook Pro",
                            SubCategoryId = new Guid("07606316-1c3e-4b9f-8bf0-f7dee877f9c9")
                        },
                        new
                        {
                            Id = new Guid("d3f63193-4cf6-44d3-a08c-18dba0dad8ea"),
                            BrandId = new Guid("f80cc0f3-312c-4492-ba91-fe81b5d3d9f1"),
                            Description = "Samsung's flagship smartphone",
                            Name = "Galaxy S21",
                            SubCategoryId = new Guid("03394997-4a75-42d6-8466-5b1e7b2e2ce6")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8a781de-3768-42c5-b7ae-8d4102482d74"),
                            Price = 2499.99m,
                            ProductId = new Guid("1d469824-3583-4c0c-9d88-df0cbd45b1ea"),
                            Sku = "MBP-16-2023",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("9644b268-d0a4-4b81-95d7-72ece534b401"),
                            Price = 1499.99m,
                            ProductId = new Guid("d3f63193-4cf6-44d3-a08c-18dba0dad8ea"),
                            Sku = "GX-24-2023",
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.Property<Guid>("SubFeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFeatureId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductItemSubFeatures");

                    b.HasData(
                        new
                        {
                            SubFeatureId = new Guid("5d6d2dc8-cf3e-4080-895a-789c051b43da"),
                            ProductItemId = new Guid("f8a781de-3768-42c5-b7ae-8d4102482d74")
                        },
                        new
                        {
                            SubFeatureId = new Guid("8f662d5b-9634-4da9-837d-39a1e0f4c634"),
                            ProductItemId = new Guid("f8a781de-3768-42c5-b7ae-8d4102482d74")
                        },
                        new
                        {
                            SubFeatureId = new Guid("5d6d2dc8-cf3e-4080-895a-789c051b43da"),
                            ProductItemId = new Guid("9644b268-d0a4-4b81-95d7-72ece534b401")
                        },
                        new
                        {
                            SubFeatureId = new Guid("8f662d5b-9634-4da9-837d-39a1e0f4c634"),
                            ProductItemId = new Guid("9644b268-d0a4-4b81-95d7-72ece534b401")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07606316-1c3e-4b9f-8bf0-f7dee877f9c9"),
                            CategoryId = new Guid("144118e0-8c56-4d95-8675-5152accf7478"),
                            Value = "Portable computers"
                        },
                        new
                        {
                            Id = new Guid("9a9d3258-3d44-4afa-9a9c-34977becf56d"),
                            CategoryId = new Guid("144118e0-8c56-4d95-8675-5152accf7478"),
                            Value = "Desktop computers"
                        },
                        new
                        {
                            Id = new Guid("03394997-4a75-42d6-8466-5b1e7b2e2ce6"),
                            CategoryId = new Guid("8267f7b5-b8c2-45fc-9a7a-172bd7bcb956"),
                            Value = "Smartphones"
                        },
                        new
                        {
                            Id = new Guid("7639844a-3681-400f-b5bf-625188a5b3f1"),
                            CategoryId = new Guid("8267f7b5-b8c2-45fc-9a7a-172bd7bcb956"),
                            Value = "Wearables"
                        },
                        new
                        {
                            Id = new Guid("dbaaf996-fd1b-4d07-a736-db25f7fb7867"),
                            CategoryId = new Guid("09e90f89-ffc7-48fe-942d-86b175057c76"),
                            Value = "Televisions"
                        },
                        new
                        {
                            Id = new Guid("26d4a103-a32e-47ef-a46e-ffbee635cc61"),
                            CategoryId = new Guid("09e90f89-ffc7-48fe-942d-86b175057c76"),
                            Value = "Headphones"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("SubFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d6d2dc8-cf3e-4080-895a-789c051b43da"),
                            FeatureId = new Guid("6b97e3e3-cbf9-4369-ba6d-f2e1e41a5a62"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("a5b33f83-0924-4d5a-852e-9c4810c02d71"),
                            FeatureId = new Guid("6b97e3e3-cbf9-4369-ba6d-f2e1e41a5a62"),
                            Value = "Red"
                        },
                        new
                        {
                            Id = new Guid("553f6c38-a8f2-4c36-9402-4bb5b79026a1"),
                            FeatureId = new Guid("6b97e3e3-cbf9-4369-ba6d-f2e1e41a5a62"),
                            Value = "Green"
                        },
                        new
                        {
                            Id = new Guid("8f662d5b-9634-4da9-837d-39a1e0f4c634"),
                            FeatureId = new Guid("8cce2447-a3c9-4d08-8289-808a534c4351"),
                            Value = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("5098d795-f8e4-45a3-8c3b-58e53aa339eb"),
                            FeatureId = new Guid("8cce2447-a3c9-4d08-8289-808a534c4351"),
                            Value = "256 GB"
                        },
                        new
                        {
                            Id = new Guid("6c1d648b-40da-44ca-a64e-6d40a8125cbb"),
                            FeatureId = new Guid("8cce2447-a3c9-4d08-8289-808a534c4351"),
                            Value = "1 TB"
                        },
                        new
                        {
                            Id = new Guid("3192e327-8c6b-40de-8252-f42214880e2d"),
                            FeatureId = new Guid("db51329a-17f1-4185-88a6-fde355db5576"),
                            Value = "6"
                        },
                        new
                        {
                            Id = new Guid("e3fbf89e-06a9-4032-b871-ae40ac0b2731"),
                            FeatureId = new Guid("db51329a-17f1-4185-88a6-fde355db5576"),
                            Value = "15.6"
                        },
                        new
                        {
                            Id = new Guid("908d5fe6-b227-4e66-941d-69b616f0e79f"),
                            FeatureId = new Guid("db51329a-17f1-4185-88a6-fde355db5576"),
                            Value = "55"
                        },
                        new
                        {
                            Id = new Guid("c52b0dd1-7c5a-49fd-84a0-7899403bec7a"),
                            FeatureId = new Guid("7ca729e8-c814-429e-97e5-78b6805ddf65"),
                            Value = "LCD"
                        },
                        new
                        {
                            Id = new Guid("878aab4b-99ec-4b4b-b431-d4badfce6429"),
                            FeatureId = new Guid("7ca729e8-c814-429e-97e5-78b6805ddf65"),
                            Value = "LED"
                        },
                        new
                        {
                            Id = new Guid("14115095-8d4e-4d60-a1fa-7062babdc6cd"),
                            FeatureId = new Guid("7ca729e8-c814-429e-97e5-78b6805ddf65"),
                            Value = "OLED"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.ProductItem", "ProductItem")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubFeature", "SubFeature")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("SubFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("SubFeature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Feature", "Feature")
                        .WithMany("SubFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Navigation("SubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
