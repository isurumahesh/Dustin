// <auto-generated />
using System;
using Dustin.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dustin.Infrastructure.Migrations
{
    [DbContext(typeof(DustinDbContext))]
    [Migration("20250420113434_change_prop_name_quantity")]
    partial class change_prop_name_quantity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dustin.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc7a94d7-d58e-4e3c-ad4a-5ec79837e94f"),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("d38ac99a-4a13-4bc4-9b2c-f480be2076d5"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("449a5050-a860-48a9-8c7b-ac7844272de3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("f6ee6602-da5e-44cd-9e92-14ec95bbd5f7"),
                            Name = "Appliances"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a37cbe2d-06f8-4a4e-813d-63bc1ac6453b"),
                            Name = "Color"
                        },
                        new
                        {
                            Id = new Guid("20416523-dd82-484d-9720-a4c9ace6e73c"),
                            Name = "Storage"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1f9bfb6-128b-46d8-9060-e4c15fcef052"),
                            BrandId = new Guid("dc7a94d7-d58e-4e3c-ad4a-5ec79837e94f"),
                            Description = "Apple's premium laptop",
                            Name = "MacBook Pro",
                            SubCategoryId = new Guid("aa2cbafa-ed6c-4fda-a38f-29ef55878000")
                        },
                        new
                        {
                            Id = new Guid("bd5eff15-fdc1-478d-b044-7fc89af83cc8"),
                            BrandId = new Guid("d38ac99a-4a13-4bc4-9b2c-f480be2076d5"),
                            Description = "Samsung's flagship smartphone",
                            Name = "Galaxy S21",
                            SubCategoryId = new Guid("454d4e2f-4053-4a5a-bc14-89cc43bf91df")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("723da66d-aaaf-4bf6-a910-ee62fee1a438"),
                            Price = 2499.99m,
                            ProductId = new Guid("a1f9bfb6-128b-46d8-9060-e4c15fcef052"),
                            Sku = "MBP-16-2023",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("42cb3133-69c0-4bb1-a85f-7a7dc8cec5aa"),
                            Price = 1499.99m,
                            ProductId = new Guid("bd5eff15-fdc1-478d-b044-7fc89af83cc8"),
                            Sku = "GX-24-2023",
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.Property<Guid>("SubFeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFeatureId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductItemSubFeatures");

                    b.HasData(
                        new
                        {
                            SubFeatureId = new Guid("4f3db966-8c73-4248-bb1e-5fedbcbc5a02"),
                            ProductItemId = new Guid("723da66d-aaaf-4bf6-a910-ee62fee1a438")
                        },
                        new
                        {
                            SubFeatureId = new Guid("8107889a-bb83-468e-ba4c-e2581c18cf17"),
                            ProductItemId = new Guid("723da66d-aaaf-4bf6-a910-ee62fee1a438")
                        },
                        new
                        {
                            SubFeatureId = new Guid("4f3db966-8c73-4248-bb1e-5fedbcbc5a02"),
                            ProductItemId = new Guid("42cb3133-69c0-4bb1-a85f-7a7dc8cec5aa")
                        },
                        new
                        {
                            SubFeatureId = new Guid("8107889a-bb83-468e-ba4c-e2581c18cf17"),
                            ProductItemId = new Guid("42cb3133-69c0-4bb1-a85f-7a7dc8cec5aa")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa2cbafa-ed6c-4fda-a38f-29ef55878000"),
                            CategoryId = new Guid("449a5050-a860-48a9-8c7b-ac7844272de3"),
                            Value = "Laptops"
                        },
                        new
                        {
                            Id = new Guid("454d4e2f-4053-4a5a-bc14-89cc43bf91df"),
                            CategoryId = new Guid("449a5050-a860-48a9-8c7b-ac7844272de3"),
                            Value = "Smartphones"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("SubFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f3db966-8c73-4248-bb1e-5fedbcbc5a02"),
                            FeatureId = new Guid("a37cbe2d-06f8-4a4e-813d-63bc1ac6453b"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("8107889a-bb83-468e-ba4c-e2581c18cf17"),
                            FeatureId = new Guid("20416523-dd82-484d-9720-a4c9ace6e73c"),
                            Value = "128 GB"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.ProductItem", "ProductItem")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubFeature", "SubFeature")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("SubFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("SubFeature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Feature", "Feature")
                        .WithMany("SubFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Navigation("SubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
