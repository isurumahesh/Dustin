// <auto-generated />
using System;
using Dustin.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dustin.Infrastructure.Migrations
{
    [DbContext(typeof(DustinDbContext))]
    partial class DustinDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dustin.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9deed5e-0fc5-45cb-b4b6-818797de0dab"),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("65890000-8e91-4c87-85ae-e53fe8c126d5"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b81e92c-11db-44a6-b5f9-736c1a73b352"),
                            Name = "Computer & Tablets"
                        },
                        new
                        {
                            Id = new Guid("e48343cb-e086-461b-96c7-7b7bcc2beea2"),
                            Name = "Mobile phones & Accessories"
                        },
                        new
                        {
                            Id = new Guid("61f180f4-47ed-4fe8-8e9d-03e076ed2ba8"),
                            Name = "Audio & video"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c5d393d-17d6-470e-8a01-4690745f2f63"),
                            Name = "Color"
                        },
                        new
                        {
                            Id = new Guid("ede5775e-9ac0-475a-b7d5-1937e7bffa11"),
                            Name = "Storage"
                        },
                        new
                        {
                            Id = new Guid("e86c2ec2-4258-4ca4-a760-3ac757db1021"),
                            Name = "Screen size"
                        },
                        new
                        {
                            Id = new Guid("8bc74995-9635-47b2-ae3a-67cbed8fb038"),
                            Name = "Display technology"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f9ddaed-eaaa-45f6-9ba0-88f8abb5697e"),
                            BrandId = new Guid("f9deed5e-0fc5-45cb-b4b6-818797de0dab"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Apple's premium laptop",
                            Name = "MacBook Pro",
                            SubCategoryId = new Guid("3310e87b-8e76-4c53-ac56-b3143b072e6b"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7501c64f-4dbf-43c8-8521-5941d65e1e42"),
                            BrandId = new Guid("65890000-8e91-4c87-85ae-e53fe8c126d5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Samsung's flagship smartphone",
                            Name = "Galaxy S21",
                            SubCategoryId = new Guid("32784cf7-88da-4525-bcb8-7002793058e9"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("808935ec-4b06-4f6f-b3aa-9fcb3ee1fe6d"),
                            Price = 2499.99m,
                            ProductId = new Guid("0f9ddaed-eaaa-45f6-9ba0-88f8abb5697e"),
                            Sku = "MBP-16-2023",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("954e45cf-689a-4a14-b18d-ea1370fa5b10"),
                            Price = 1499.99m,
                            ProductId = new Guid("7501c64f-4dbf-43c8-8521-5941d65e1e42"),
                            Sku = "GX-24-2023",
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.Property<Guid>("SubFeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFeatureId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductItemSubFeatures");

                    b.HasData(
                        new
                        {
                            SubFeatureId = new Guid("30d49318-0022-457c-b57b-1e13a4777728"),
                            ProductItemId = new Guid("808935ec-4b06-4f6f-b3aa-9fcb3ee1fe6d")
                        },
                        new
                        {
                            SubFeatureId = new Guid("bc09ed7d-d686-4ad0-a7a2-9e5588f79240"),
                            ProductItemId = new Guid("808935ec-4b06-4f6f-b3aa-9fcb3ee1fe6d")
                        },
                        new
                        {
                            SubFeatureId = new Guid("30d49318-0022-457c-b57b-1e13a4777728"),
                            ProductItemId = new Guid("954e45cf-689a-4a14-b18d-ea1370fa5b10")
                        },
                        new
                        {
                            SubFeatureId = new Guid("bc09ed7d-d686-4ad0-a7a2-9e5588f79240"),
                            ProductItemId = new Guid("954e45cf-689a-4a14-b18d-ea1370fa5b10")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3310e87b-8e76-4c53-ac56-b3143b072e6b"),
                            CategoryId = new Guid("1b81e92c-11db-44a6-b5f9-736c1a73b352"),
                            Value = "Portable computers"
                        },
                        new
                        {
                            Id = new Guid("f4ac92df-9dc3-4074-bd73-fcd203e586fb"),
                            CategoryId = new Guid("1b81e92c-11db-44a6-b5f9-736c1a73b352"),
                            Value = "Desktop computers"
                        },
                        new
                        {
                            Id = new Guid("32784cf7-88da-4525-bcb8-7002793058e9"),
                            CategoryId = new Guid("e48343cb-e086-461b-96c7-7b7bcc2beea2"),
                            Value = "Smartphones"
                        },
                        new
                        {
                            Id = new Guid("ae1fc360-ad1b-4d28-aa17-1044aa610b69"),
                            CategoryId = new Guid("e48343cb-e086-461b-96c7-7b7bcc2beea2"),
                            Value = "Wearables"
                        },
                        new
                        {
                            Id = new Guid("d5c0ff69-ce62-4fc6-bcc7-a662837e3332"),
                            CategoryId = new Guid("61f180f4-47ed-4fe8-8e9d-03e076ed2ba8"),
                            Value = "Televisions"
                        },
                        new
                        {
                            Id = new Guid("605496f1-894a-4bff-9e77-d0bd11350d15"),
                            CategoryId = new Guid("61f180f4-47ed-4fe8-8e9d-03e076ed2ba8"),
                            Value = "Headphones"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("SubFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30d49318-0022-457c-b57b-1e13a4777728"),
                            FeatureId = new Guid("6c5d393d-17d6-470e-8a01-4690745f2f63"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("e4aeeca4-9c5e-4fb6-9487-2f528bf4acd3"),
                            FeatureId = new Guid("6c5d393d-17d6-470e-8a01-4690745f2f63"),
                            Value = "Red"
                        },
                        new
                        {
                            Id = new Guid("90db00cd-f799-4070-b18c-e6a39bf92053"),
                            FeatureId = new Guid("6c5d393d-17d6-470e-8a01-4690745f2f63"),
                            Value = "Green"
                        },
                        new
                        {
                            Id = new Guid("bc09ed7d-d686-4ad0-a7a2-9e5588f79240"),
                            FeatureId = new Guid("ede5775e-9ac0-475a-b7d5-1937e7bffa11"),
                            Value = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("878f7abb-d1cd-4233-bb51-5ff86d18dcb4"),
                            FeatureId = new Guid("ede5775e-9ac0-475a-b7d5-1937e7bffa11"),
                            Value = "256 GB"
                        },
                        new
                        {
                            Id = new Guid("9d444760-7964-4971-ade1-893f8c27ce45"),
                            FeatureId = new Guid("ede5775e-9ac0-475a-b7d5-1937e7bffa11"),
                            Value = "1 TB"
                        },
                        new
                        {
                            Id = new Guid("a260eb86-718e-4c91-beea-a524becd91b1"),
                            FeatureId = new Guid("e86c2ec2-4258-4ca4-a760-3ac757db1021"),
                            Value = "6"
                        },
                        new
                        {
                            Id = new Guid("3eec4e77-0f20-4922-82e1-58cfeff0aef2"),
                            FeatureId = new Guid("e86c2ec2-4258-4ca4-a760-3ac757db1021"),
                            Value = "15.6"
                        },
                        new
                        {
                            Id = new Guid("a5fb4233-4539-4e39-8ca1-b43b467b1dad"),
                            FeatureId = new Guid("e86c2ec2-4258-4ca4-a760-3ac757db1021"),
                            Value = "55"
                        },
                        new
                        {
                            Id = new Guid("6aa8652d-bc81-489d-815b-c96fb495107d"),
                            FeatureId = new Guid("8bc74995-9635-47b2-ae3a-67cbed8fb038"),
                            Value = "LCD"
                        },
                        new
                        {
                            Id = new Guid("8dac1f07-d83b-43af-9c15-8e285f716d3a"),
                            FeatureId = new Guid("8bc74995-9635-47b2-ae3a-67cbed8fb038"),
                            Value = "LED"
                        },
                        new
                        {
                            Id = new Guid("f5cd8297-78a0-4ac8-919b-ee553032a855"),
                            FeatureId = new Guid("8bc74995-9635-47b2-ae3a-67cbed8fb038"),
                            Value = "OLED"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.ProductItem", "ProductItem")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubFeature", "SubFeature")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("SubFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("SubFeature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Feature", "Feature")
                        .WithMany("SubFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Navigation("SubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
