// <auto-generated />
using System;
using Dustin.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dustin.Infrastructure.Migrations
{
    [DbContext(typeof(DustinDbContext))]
    [Migration("20250420140137_add_property_validation")]
    partial class add_property_validation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dustin.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cf3ad09-b33a-4dff-a4cf-ae216857a12e"),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("4bf10957-c74c-4cbc-a3e2-101edf2c5c91"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a840a3f-bab3-4898-8256-4b899a4e11e6"),
                            Name = "Computer & Tablets"
                        },
                        new
                        {
                            Id = new Guid("74ba6fae-9f0b-47bc-8c35-099adae59190"),
                            Name = "Mobile phones & Accessories"
                        },
                        new
                        {
                            Id = new Guid("f4a0f85d-ddfd-431e-a5a3-218be777812b"),
                            Name = "Audio & video"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78fd97ac-be26-4ea1-997c-2b71e306fdd1"),
                            Name = "Color"
                        },
                        new
                        {
                            Id = new Guid("b1d597fa-aa4c-4895-aadc-f3c7044c96d6"),
                            Name = "Storage"
                        },
                        new
                        {
                            Id = new Guid("90ec0370-9d26-472d-981c-edd32f66c176"),
                            Name = "Screen size"
                        },
                        new
                        {
                            Id = new Guid("20790215-ec2f-466d-87d3-1eb33e47981c"),
                            Name = "Display technology"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("153b5de0-c083-43da-bd08-39ebf52a2aaa"),
                            BrandId = new Guid("4cf3ad09-b33a-4dff-a4cf-ae216857a12e"),
                            Description = "Apple's premium laptop",
                            Name = "MacBook Pro",
                            SubCategoryId = new Guid("881a9280-dc5a-4633-9ee1-495973f9866e")
                        },
                        new
                        {
                            Id = new Guid("95c5edce-b0d6-46d9-9e1f-274ca9d4a20a"),
                            BrandId = new Guid("4bf10957-c74c-4cbc-a3e2-101edf2c5c91"),
                            Description = "Samsung's flagship smartphone",
                            Name = "Galaxy S21",
                            SubCategoryId = new Guid("80f9416a-0437-4866-b9bd-6361242bcd57")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b47024fc-ca53-4b22-8a90-ca4b3672e2b8"),
                            Price = 2499.99m,
                            ProductId = new Guid("153b5de0-c083-43da-bd08-39ebf52a2aaa"),
                            Sku = "MBP-16-2023",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("9e28ec12-e4b6-4017-8d88-711ccf716e1a"),
                            Price = 1499.99m,
                            ProductId = new Guid("95c5edce-b0d6-46d9-9e1f-274ca9d4a20a"),
                            Sku = "GX-24-2023",
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.Property<Guid>("SubFeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFeatureId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductItemSubFeatures");

                    b.HasData(
                        new
                        {
                            SubFeatureId = new Guid("2a393d00-fa21-456e-ab3c-d7a24f7a7d06"),
                            ProductItemId = new Guid("b47024fc-ca53-4b22-8a90-ca4b3672e2b8")
                        },
                        new
                        {
                            SubFeatureId = new Guid("97381031-9c33-4495-a3e1-5112718abfcc"),
                            ProductItemId = new Guid("b47024fc-ca53-4b22-8a90-ca4b3672e2b8")
                        },
                        new
                        {
                            SubFeatureId = new Guid("2a393d00-fa21-456e-ab3c-d7a24f7a7d06"),
                            ProductItemId = new Guid("9e28ec12-e4b6-4017-8d88-711ccf716e1a")
                        },
                        new
                        {
                            SubFeatureId = new Guid("97381031-9c33-4495-a3e1-5112718abfcc"),
                            ProductItemId = new Guid("9e28ec12-e4b6-4017-8d88-711ccf716e1a")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("881a9280-dc5a-4633-9ee1-495973f9866e"),
                            CategoryId = new Guid("2a840a3f-bab3-4898-8256-4b899a4e11e6"),
                            Value = "Portable computers"
                        },
                        new
                        {
                            Id = new Guid("8471ff39-fff3-4d22-9785-e2da3459f0fc"),
                            CategoryId = new Guid("2a840a3f-bab3-4898-8256-4b899a4e11e6"),
                            Value = "Desktop computers"
                        },
                        new
                        {
                            Id = new Guid("80f9416a-0437-4866-b9bd-6361242bcd57"),
                            CategoryId = new Guid("74ba6fae-9f0b-47bc-8c35-099adae59190"),
                            Value = "Smartphones"
                        },
                        new
                        {
                            Id = new Guid("c2ddb826-3e48-4ec9-a1ac-f31b61e0c484"),
                            CategoryId = new Guid("74ba6fae-9f0b-47bc-8c35-099adae59190"),
                            Value = "Wearables"
                        },
                        new
                        {
                            Id = new Guid("6d3d59d4-c8ff-40c3-b3ef-d48495f967a4"),
                            CategoryId = new Guid("f4a0f85d-ddfd-431e-a5a3-218be777812b"),
                            Value = "Televisions"
                        },
                        new
                        {
                            Id = new Guid("3b89ff21-09f0-435b-9ce3-733ff103802d"),
                            CategoryId = new Guid("f4a0f85d-ddfd-431e-a5a3-218be777812b"),
                            Value = "Headphones"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("SubFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a393d00-fa21-456e-ab3c-d7a24f7a7d06"),
                            FeatureId = new Guid("78fd97ac-be26-4ea1-997c-2b71e306fdd1"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("8b4039db-eb83-4b47-a110-c7dcb67c7cd2"),
                            FeatureId = new Guid("78fd97ac-be26-4ea1-997c-2b71e306fdd1"),
                            Value = "Red"
                        },
                        new
                        {
                            Id = new Guid("7fdce65f-7160-40af-a257-a9e845f3fdef"),
                            FeatureId = new Guid("78fd97ac-be26-4ea1-997c-2b71e306fdd1"),
                            Value = "Green"
                        },
                        new
                        {
                            Id = new Guid("97381031-9c33-4495-a3e1-5112718abfcc"),
                            FeatureId = new Guid("b1d597fa-aa4c-4895-aadc-f3c7044c96d6"),
                            Value = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("99957586-9832-474e-a747-8f87f37aa2ff"),
                            FeatureId = new Guid("b1d597fa-aa4c-4895-aadc-f3c7044c96d6"),
                            Value = "256 GB"
                        },
                        new
                        {
                            Id = new Guid("ad94f789-d72e-4a94-b6cb-412d75bb255b"),
                            FeatureId = new Guid("b1d597fa-aa4c-4895-aadc-f3c7044c96d6"),
                            Value = "1 TB"
                        },
                        new
                        {
                            Id = new Guid("92580012-739e-4723-834c-9591b9fe5074"),
                            FeatureId = new Guid("90ec0370-9d26-472d-981c-edd32f66c176"),
                            Value = "6"
                        },
                        new
                        {
                            Id = new Guid("c9a5243a-1960-4e54-ada7-18736ebc23d6"),
                            FeatureId = new Guid("90ec0370-9d26-472d-981c-edd32f66c176"),
                            Value = "15.6"
                        },
                        new
                        {
                            Id = new Guid("5cc262c8-97ef-49ee-8237-f537eba10a65"),
                            FeatureId = new Guid("90ec0370-9d26-472d-981c-edd32f66c176"),
                            Value = "55"
                        },
                        new
                        {
                            Id = new Guid("7816e36b-4036-4f35-b78b-6083ef5ba8ee"),
                            FeatureId = new Guid("20790215-ec2f-466d-87d3-1eb33e47981c"),
                            Value = "LCD"
                        },
                        new
                        {
                            Id = new Guid("897ac5d7-dde9-48e8-bbed-3d67f52f2a22"),
                            FeatureId = new Guid("20790215-ec2f-466d-87d3-1eb33e47981c"),
                            Value = "LED"
                        },
                        new
                        {
                            Id = new Guid("1b98e4ec-db65-45a3-8386-77f8e8e3d069"),
                            FeatureId = new Guid("20790215-ec2f-466d-87d3-1eb33e47981c"),
                            Value = "OLED"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.ProductItem", "ProductItem")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubFeature", "SubFeature")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("SubFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("SubFeature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Feature", "Feature")
                        .WithMany("SubFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Navigation("SubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
