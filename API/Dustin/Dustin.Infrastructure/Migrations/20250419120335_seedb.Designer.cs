// <auto-generated />
using System;
using Dustin.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dustin.Infrastructure.Migrations
{
    [DbContext(typeof(DustinDbContext))]
    [Migration("20250419120335_seedb")]
    partial class seedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dustin.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98aa8de1-0ef1-40e8-9773-f41822e08eb4"),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("d7e46006-01a7-4d0e-8f99-f79f5c9a0544"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e08d9dca-b65b-45ce-a261-401bb51aba8e"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("6aea08c4-0f6b-4b3c-aea7-6b874c9cebc7"),
                            Name = "Appliances"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdfb6e29-c3ce-4848-847c-49f619f14243"),
                            Name = "Color"
                        },
                        new
                        {
                            Id = new Guid("82bdebfe-de55-4dca-b710-d755f00b4296"),
                            Name = "Storage"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0199be6e-6269-4dba-8308-1d49e68adbdb"),
                            BrandId = new Guid("98aa8de1-0ef1-40e8-9773-f41822e08eb4"),
                            Description = "Apple's premium laptop",
                            Name = "MacBook Pro",
                            SubCategoryId = new Guid("c3acbf6a-4383-4a71-a555-b4cd1ae3e318")
                        },
                        new
                        {
                            Id = new Guid("a1bc16f9-ee06-4e72-be90-b9cc018b12a9"),
                            BrandId = new Guid("d7e46006-01a7-4d0e-8f99-f79f5c9a0544"),
                            Description = "Samsung's flagship smartphone",
                            Name = "Galaxy S21",
                            SubCategoryId = new Guid("714ab344-da8a-4831-8d97-4422fbc354ad")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98ffc17b-1c77-4ecb-b122-83e97c460657"),
                            Price = 2499.99m,
                            ProductId = new Guid("0199be6e-6269-4dba-8308-1d49e68adbdb"),
                            Quantity = 100,
                            Sku = "MBP-16-2023"
                        },
                        new
                        {
                            Id = new Guid("44e70068-82b6-469c-b53f-56b6263a1b49"),
                            Price = 1499.99m,
                            ProductId = new Guid("a1bc16f9-ee06-4e72-be90-b9cc018b12a9"),
                            Quantity = 50,
                            Sku = "GX-24-2023"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.Property<Guid>("SubFeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFeatureId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductItemSubFeatures");

                    b.HasData(
                        new
                        {
                            SubFeatureId = new Guid("2310246e-583f-4410-9fe2-a963e3c706b8"),
                            ProductItemId = new Guid("98ffc17b-1c77-4ecb-b122-83e97c460657")
                        },
                        new
                        {
                            SubFeatureId = new Guid("b2af586a-d23a-46a9-bdb9-ed06dfe601fe"),
                            ProductItemId = new Guid("98ffc17b-1c77-4ecb-b122-83e97c460657")
                        },
                        new
                        {
                            SubFeatureId = new Guid("2310246e-583f-4410-9fe2-a963e3c706b8"),
                            ProductItemId = new Guid("44e70068-82b6-469c-b53f-56b6263a1b49")
                        },
                        new
                        {
                            SubFeatureId = new Guid("b2af586a-d23a-46a9-bdb9-ed06dfe601fe"),
                            ProductItemId = new Guid("44e70068-82b6-469c-b53f-56b6263a1b49")
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3acbf6a-4383-4a71-a555-b4cd1ae3e318"),
                            CategoryId = new Guid("e08d9dca-b65b-45ce-a261-401bb51aba8e"),
                            Value = "Laptops"
                        },
                        new
                        {
                            Id = new Guid("714ab344-da8a-4831-8d97-4422fbc354ad"),
                            CategoryId = new Guid("e08d9dca-b65b-45ce-a261-401bb51aba8e"),
                            Value = "Smartphones"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("SubFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2310246e-583f-4410-9fe2-a963e3c706b8"),
                            FeatureId = new Guid("cdfb6e29-c3ce-4848-847c-49f619f14243"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("b2af586a-d23a-46a9-bdb9-ed06dfe601fe"),
                            FeatureId = new Guid("82bdebfe-de55-4dca-b710-d755f00b4296"),
                            Value = "128 GB"
                        });
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItemSubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.ProductItem", "ProductItem")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dustin.Domain.Entities.SubFeature", "SubFeature")
                        .WithMany("ProductItemSubFeatures")
                        .HasForeignKey("SubFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("SubFeature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.HasOne("Dustin.Domain.Entities.Feature", "Feature")
                        .WithMany("SubFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Feature", b =>
                {
                    b.Navigation("SubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.ProductItem", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });

            modelBuilder.Entity("Dustin.Domain.Entities.SubFeature", b =>
                {
                    b.Navigation("ProductItemSubFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
